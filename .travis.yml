notifications:
  email: false

sudo: required

matrix:
  fast_finish: true

services:
  - postgresql
  - docker
  - redis-server

addons:
  postgresql: '9.4'

language: php
php:
  - '7.2.11'

env:
  global:
    - STRIPE_MOCK_API_BASE=http://localhost:12111
    - SYMFONY_ENV=test
    - NODE_ENV=test
    - BEHAT_PARAMS='{"extensions":{"Behat\\MinkExtension":{"base_url":"http://127.0.0.1:8080","sessions":{"selenium2":{"selenium2":{"wd_host":"http://localhost:4444/wd/hub"}}}}}}'
    - ASSETS_BASE_URL=http://127.0.0.1:8080
    # https://docs.travis-ci.com/user/encryption-keys
    # GOOGLE_API_KEY
    - secure: "QQdL4x+Ht2/qUv+qhtyR/9effGz2P6PyJ0+8lGWycu0K5sKmtcUO/6xK7il4/uK5nogm4YcON1Pcmm665NhfCSu1gicNgd0bYR0KIWIYPeWUM9pjC1yzZhh2MOl9p0NWo6ulI1Ex7WTmN8sXc5AuNhpnKuQXR8mZPu5Tg9YTodkglKARdO11Nk1rU4dLefvlmncWHgtZ4DTYINe0jHWLH0RnmLKtKVzwLpeSt/AEplRAl25fh+qp6fw61qoHMLLyUGTJpli+mvEUruAKupc4bERBOaL9uEa+J0X0eOumK5tQLyXPGjibPRjwJWxBq7OHZOWtX4CvbWU6xoF/MM0hp9HRdH6i06tlo68BTR+dBviQWw7s2JLqCWrYtb6ifsmg+FVY4cKTDQG9mEJ6ZEMa8OAIaIltaXj3MyrrbsnkJIbweXn6OfsJBxzeIO8VaNJ++XA5uFD/RH1ClY9je6P635eFU2KSOoj58i3ElNl8Mn1/hwaBUZlfmytwLMmDmjyNr0EpuLohep6+FLv5vksgea0Nj1wI7HUJ0kY8bX6+BkFL1AWVrDJX3ZW38GvAArRWs+HHF7PN35agwSwOhih8SRtn/DpOWBNfG1Q+/PN1Yf6tWsPWc6aGCWNFiWjTOOtrkTTo1RO2uVuYaprsbW9nzMu69wlq82z/0ZxmKenxAYM="

before_install:
  - sudo apt-get update -qq
  - nvm install 8
install:
  # Remove error could not access file "$libdir/postgis-2.3": No such file or directory
  - sudo apt-get install -y $(apt-cache search postgis | awk '/^postgresql-9\.[2-5]-postgis-2.3/{printf " "$1}' )
  - sudo service postgresql restart
  - npm install
  - npm install -g pm2
  # Install OSRM
  - mkdir -p var/osrm
  - wget https://coopcycle.org/osm/paris-france.osm.pbf -P var/osrm
  - docker run -t -v $(pwd)/var/osrm:/data osrm/osrm-backend:latest osrm-extract -p /opt/bicycle.lua /data/paris-france.osm.pbf
  - docker run -t -v $(pwd)/var/osrm:/data osrm/osrm-backend:latest osrm-partition /data/paris-france.osrm
  - docker run -t -v $(pwd)/var/osrm:/data osrm/osrm-backend:latest osrm-customize /data/paris-france.osrm
  - docker run -t -v $(pwd)/var/osrm:/data -d -p 5000:5000 osrm/osrm-backend:latest osrm-routed --algorithm mld /data/paris-france.osrm
  - docker run -t -d -p 12111:12111 stripemock/stripe-mock
  # Run Selenium using host networking
  # https://github.com/elgalu/docker-selenium#dns
  # https://docs.docker.com/network/host/
  - docker run --rm -ti -d --name zalenium --network="host" -p 4444:4444 -e PULL_SELENIUM_IMAGE=true -v /var/run/docker.sock:/var/run/docker.sock --privileged dosel/zalenium start

before_script:
  - phpenv config-rm xdebug.ini
  # Configure JSON Web Token
  - mkdir -p var/jwt
  - openssl genrsa -out var/jwt/private.pem 4096
  - openssl rsa -pubout -in var/jwt/private.pem -out var/jwt/public.pem
  # Configure PostgreSQL
  - psql -U postgres -c 'CREATE DATABASE coopcycle_test;'
  - psql -U postgres -d coopcycle_test -c 'CREATE EXTENSION postgis;'
  - psql -U postgres -d coopcycle_test -c 'CREATE EXTENSION postgis_topology;'
  # Install PHP app
  - cp app/config/parameters.yml.travis app/config/parameters.yml
  # - composer install --prefer-dist
  # Install Composer 1.7.2
  # https://github.com/coopcycle/coopcycle-web/issues/492
  - curl -sS https://getcomposer.org/installer | php -- --version=1.7.2
  - php composer.phar install --prefer-dist
  - php bin/console doctrine:schema:create --env=test
  - node_modules/.bin/encore dev
  - php bin/console server:start 127.0.0.1:8080
  - cp phpunit.xml.dist phpunit.xml
  - pm2 start pm2.config.js --env=test

script:
  # - curl 'http://localhost:5000/route/v1/bicycle/2.3706188,48.877821;2.385706,48.887031?overview=full'
  - phpunit
  - php vendor/bin/behat -f progress
  - node node_modules/.bin/mocha --require babel-core/register --exit js/tests/
